// src/modules/diagnosticos/diagnosticos.routes.ts
import { Router } from 'express';
import { DiagnosticosController, CIE10Controller } from './diagnosticos.controller.js';

export const routerDiagnosticos = Router();

// ===== RUTAS ESPEC√çFICAS (deben ir antes de las rutas con par√°metros) =====

// üîç Buscar diagn√≥sticos con filtros
routerDiagnosticos.get('/buscar', DiagnosticosController.buscar);

// üß™ Test de funcionalidad
routerDiagnosticos.get('/test', DiagnosticosController.test);

// üìã Buscar c√≥digos CIE-10 (para el buscador del frontend)
routerDiagnosticos.get('/cie10/buscar', CIE10Controller.buscar);

// üìö Obtener c√≥digos CIE-10 comunes
routerDiagnosticos.get('/cie10/comunes', CIE10Controller.obtenerComunes);

// üÜï Crear c√≥digo CIE-10 (administraci√≥n)
routerDiagnosticos.post('/cie10', CIE10Controller.crear);

// ===== RUTAS CRUD B√ÅSICAS =====

// üìù Crear nuevo diagn√≥stico (desde formulario del frontend)
routerDiagnosticos.post('/', DiagnosticosController.crear);

// üë§ Listar diagn√≥sticos de un paciente espec√≠fico
routerDiagnosticos.get('/paciente/:pacienteId', DiagnosticosController.listarPorPaciente);

// ===== RUTAS CON ID DE DIAGN√ìSTICO =====

// üîç Obtener diagn√≥stico por ID
routerDiagnosticos.get('/:id', DiagnosticosController.obtenerPorId);

// ‚úèÔ∏è Actualizar diagn√≥stico existente (desde formulario de edici√≥n)
routerDiagnosticos.put('/:id', DiagnosticosController.actualizar);

// üóëÔ∏è Eliminar/Anular diagn√≥stico
routerDiagnosticos.delete('/:id', DiagnosticosController.eliminar);

// ===== RESUMEN DE RUTAS DISPONIBLES =====
/*
ENDPOINTS PRINCIPALES (para el frontend):
POST   /api/diagnosticos                    # ‚úÖ Crear diagn√≥stico (desde DiagnosticoForm)
GET    /api/diagnosticos/buscar             # ‚úÖ Buscar con filtros avanzados
GET    /api/diagnosticos/paciente/:id       # ‚úÖ Listar diagn√≥sticos del paciente
GET    /api/diagnosticos/:id                # ‚úÖ Obtener diagn√≥stico espec√≠fico
PUT    /api/diagnosticos/:id                # ‚úÖ Actualizar diagn√≥stico (edici√≥n)
DELETE /api/diagnosticos/:id                # ‚úÖ Anular diagn√≥stico

ENDPOINTS CIE-10 (para el buscador del frontend):
GET    /api/diagnosticos/cie10/buscar       # ‚úÖ Buscar c√≥digos CIE-10 (searchTerm)
GET    /api/diagnosticos/cie10/comunes      # ‚úÖ C√≥digos CIE-10 m√°s comunes
POST   /api/diagnosticos/cie10              # ‚úÖ Crear nuevo c√≥digo (admin)

ENDPOINT DE PRUEBA:
GET    /api/diagnosticos/test               # ‚úÖ Test de funcionamiento

EJEMPLOS DE USO DESDE EL FRONTEND:

1. CREAR DIAGN√ìSTICO:
fetch('/api/diagnosticos', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    pacienteId: 15,
    impresionClinica: "Paciente presenta s√≠ntomas compatibles con...",
    principal: "Hipertensi√≥n arterial esencial",
    secundarios: "Diabetes mellitus tipo 2, Obesidad",
    diferencial: "Hipertensi√≥n secundaria a descartar",
    cie10: "I10 - Hipertensi√≥n esencial (primaria)",
    consultaId: 5  // opcional
  })
})

2. BUSCAR C√ìDIGOS CIE-10 (para el searchTerm del frontend):
fetch('/api/diagnosticos/cie10/buscar?q=hipertension&limite=10')

3. LISTAR DIAGN√ìSTICOS DE UN PACIENTE:
fetch('/api/diagnosticos/paciente/15?limite=20&pagina=1')

4. ACTUALIZAR DIAGN√ìSTICO:
fetch('/api/diagnosticos/1', {
  method: 'PUT',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    principal: "Hipertensi√≥n arterial esencial - diagn√≥stico confirmado",
    cie10: "I10 - Hipertensi√≥n esencial (primaria)",
    observaciones: "Confirmado con mediciones ambulatorias"
  })
})

5. BUSCAR DIAGN√ìSTICOS CON FILTROS:
fetch('/api/diagnosticos/buscar?pacienteId=15&estado=ACTIVO&cie10=I10&limite=10')
*/